basePath: /
consumes:
  - application/json
definitions:
  Credentials:
    properties:
      password:
        description: password coupling in credentials for your username
        type: string
      username:
        description: your registered username
        type: string
    required:
      - username
      - password
  FileDelete:
    properties:
      resource:
        type: string
  FileUpdate:
    properties:
      newname:
        description: iRODS resource
        type: string
      resource:
        type: string
    required:
      - newname
  ProfileUpdate:
    properties:
      newpassword:
        description: the new password to associate to your profile
        type: string
    required:
      - newpassword
host: b2stage.cineca.it
info:
  title: EUDAT-B2STAGE HTTP-API server
  version: 1.0.0
paths:
  /api/admin:
    get:
      responses:
        '200':
          description: Current user is classified as admin
        '401':
          description: Missing or invalid credentials or token
      security:
        - Bearer: []
      summary: Administration privilege verification
      x-code-samples:
        - lang: 'Curl'
          source: |
            curl -H "Authorization: Bearer <auth_token>" <http_server:port>/api/admin
      tags:
        - base
        - helpers
  /api/admin/users:
    get:
      responses:
        '200':
          description: List of users successfully retrieved
        '401':
          description: Missing or invalid credentials or token
      security:
        - Bearer: []
      summary: List of users
      tags:
        - admin
    post:
      responses:
        '200':
          description: The uuid of the new user is returned
        '401':
          description: Missing or invalid credentials or token
      security:
        - Bearer: []
      summary: Create a new user
      tags:
        - admin
  '/api/admin/users/{user_id}':
    delete:
      parameters:
        - in: path
          name: user_id
          required: true
          type: string
      responses:
        '200':
          description: User successfully deleted
        '401':
          description: Missing or invalid credentials or token
      security:
        - Bearer: []
      summary: Delete a user
      tags:
        - admin
    get:
      parameters:
        - in: path
          name: user_id
          required: true
          type: string
      responses:
        '200':
          description: User information successfully retrieved
        '401':
          description: Missing or invalid credentials or token
      security:
        - Bearer: []
      summary: Obtain information on a single user
      tags:
        - admin
    put:
      parameters:
        - in: path
          name: user_id
          required: true
          type: string
      responses:
        '200':
          description: User successfully modified
        '401':
          description: Missing or invalid credentials or token
      security:
        - Bearer: []
      summary: Modify a user
      tags:
        - admin
  /api/internal:
    get:
      responses:
        '200':
          description: Current user is classified as internal
        '401':
          description: Missing or invalid credentials or token
      security:
        - Bearer: []
      summary: Role authentication test with internals
      tags:
        - base
        - helpers
  '/api/metadata/{irods_location}':
    patch:
      parameters:
        - in: body
          name: metadata
          required: true
          schema:
            items:
              type: string
            type: array
        - description: the filesystem path to your digital entities/objects
          in: path
          name: irods_location
          required: true
          type: string
      responses:
        '200':
          description: Metadata added
        '401':
          description: Missing or invalid credentials or token
      security:
        - Bearer: []
      summary: Add metadata to object
      tags:
        - helpers
  '/api/pids/{pid}':
    get:
      parameters:
        - description: Activate file downloading (if PID points to a single file)
          in: query
          name: download
          type: boolean
        - description: the EUDAT PID to be resolved
          in: path
          name: pid
          required: true
          type: string
      responses:
        '200':
          description: >-
            The information related to the file which the PID points to or the
            file content if download is activated or the list of objects if the
            PID points to a collection
          examples:
            application/json:
              Meta:
               data_type: <class 'dict'>
               elements: 2
               errors: 0
               status: 200
              Response:
               data:
                 EUDAT/CHECKSUM: '123456789'
                 URL: "<http_server:port>/api/registered/tempZone/home/guest/test.txt"
               errors: null  
        '401': 
          description: Missing or invalid credentials or token
      security:
        - Bearer: []
      summary: >-
        Resolve the input PID and retrieve a digital object information or
        download it or list a collection
      x-code-samples:
        - lang: 'Curl'
          source: |
            curl -H "Authorization: Bearer <auth_token>" <http_server:port>/api/pids/<PID>
      tags:
        - eudat
        - pids
  '/api/publish/{irods_location}':
    delete:
      parameters:
        - description: the filesystem path to your digital entities/objects
          in: path
          name: irods_location
          required: true
          type: string
      responses:
        '200':
          description: return a bolean 'published' if readable for anonymous
        '401':
          description: Missing or invalid credentials or token
      security:
        - Bearer: []
      summary: Ensure that the irods path is not readable for anonymous user
      tags:
        - eudat
        - publish
    get:
      parameters:
        - description: the filesystem path to your digital entities/objects
          in: path
          name: irods_location
          required: true
          type: string
      responses:
        '200':
          description: return a bolean 'published' if readable for anonymous
        '401':
          description: Missing or invalid credentials or token
      security:
        - Bearer: []
      summary: Check if that irods path is currently readable for anonymous user
      tags:
        - eudat
        - publish
    put:
      parameters:
        - description: the filesystem path to your digital entities/objects
          in: path
          name: irods_location
          required: true
          type: string
      responses:
        '200':
          description: return a bolean 'published' if readable for anonymous
        '401':
          description: Missing or invalid credentials or token
      security:
        - Bearer: []
      summary: Ensure that the irods path becomes readable for anonymous user
      tags:
        - eudat
        - publish
  /api/registered:
    delete:
      parameters:
        - description: Only for debug mode
          in: query
          name: debugclean
          type: boolean
      responses:
        '200':
          description: Clean completed
        '401':
          description: Missing or invalid credentials or token
      security:
        - Bearer: []
      summary: Debug clean up
      tags:
        - eudat
        - registered
    post:
      parameters:
        - description: the filesystem path to created collection
          in: query
          name: path
          type: string
      responses:
        '200':
          description: Collection created
        '401':
          description: Missing or invalid credentials or token
      security:
        - Bearer: []
      summary: Create a new collection
      tags:
        - eudat
        - registered
  '/api/registered/{irods_location}':
    delete:
      parameters:
        - description: the filesystem path to your digital entities/objects
          in: path
          name: irods_location
          required: true
          type: string
      responses:
        '200':
          description: File name updated
        '401':
          description: Missing or invalid credentials or token
      security:
        - Bearer: []
      summary: Delete an entity
      tags:
        - eudat
        - registered
    get:
      parameters:
        - description: activate file downloading (if path is a single file)
          in: query
          name: download
          type: boolean
        - description: the filesystem path to your digital entities/objects
          in: path
          name: irods_location
          required: true
          type: string
      responses:
        '200':
          description: >-
            Returns the digital object information or file content if download
            is activated or the list of objects related to the requested path
            (PID is returned if available)
        '401':
          description: Missing or invalid credentials or token
      security:
        - Bearer: []
      summary: Retrieve a single digital entity/object information or download it
      tags:
        - eudat
        - registered
    patch:
      parameters:
        - in: body
          name: new file name
          schema:
            $ref: '#/definitions/FileUpdate'
        - description: the filesystem path to your digital entities/objects
          in: path
          name: irods_location
          required: true
          type: string
      responses:
        '200':
          description: File name updated
        '401':
          description: Missing or invalid credentials or token
      security:
        - Bearer: []
      summary: Update an entity name
      tags:
        - eudat
        - registered
    put:
      parameters:
        - description: file data to be uploaded
          in: formData
          name: file
          required: true
          type: file
        - description: force action even if getting warnings
          in: query
          name: force
          type: boolean
        - description: Returns PID in the JSON response
          in: query
          name: pid_await
          type: boolean
        - description: the filesystem path to your digital entities/objects
          in: path
          name: irods_location
          required: true
          type: string
      responses:
        '200':
          description: File created
        '401':
          description: Missing or invalid credentials or token
      security:
        - Bearer: []
      summary: Upload a new file
      tags:
        - eudat
        - registered
  /api/specs:
    get:
      responses:
        '200':
          description: a JSON with all endpoint defined with Swagger standards
      summary: Specifications output throught Swagger (open API) standards
      tags:
        - base
        - specifications
  /api/status:
    get:
      description: You may use this URI to monitor network or server problems.
      responses:
        '200':
          description: Server is alive!
      summary: Check if the API server is currently reachable
      tags:
        - base
        - helpers
  /auth/b2safeproxy:
    get:
      responses:
        '200':
          description: token is valid
        '401':
          description: Missing or invalid credentials or token
      security:
        - Bearer: []
      summary: Test a token obtained as a B2SAFE iRODS user
      tags:
        - eudat
        - b2safe
        - authentication
    post:
      description: Normal credentials (username and password) login endpoint
      parameters:
        - in: body
          name: irods_credentials
          schema:
            $ref: '#/definitions/Credentials'
      responses:
        '200':
          description: iRODS credentials provided are valid
        '401':
          description: Invalid username or password for the current B2SAFE instance
      summary: Authenticate inside HTTP API with B2SAFE iRODS user
      tags:
        - eudat
        - b2safe
        - authentication
  /auth/login:
    post:
      description: Normal credentials (username and password) login endpoint
      parameters:
        - in: body
          name: credentials
          schema:
            $ref: '#/definitions/Credentials'
      responses:
        '200':
          description: Credentials are valid
          examples:
            application/json:
              Meta:
                data_type: string
                elements: 1
                errors: 0
                status: 200
              Response:
                data:
                  token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9
                errors:
                  'null': null
        '401':
          description: Invalid username or password
      summary: Login with basic credentials
      tags:
        - base
        - authentication
  /auth/logout:
    get:
      description: Invalidate current registered token
      responses:
        '200':
          description: Token correctly removed
        '401':
          description: Missing or invalid credentials or token
      security:
        - Bearer: []
      summary: Logout from current credentials
      tags:
        - base
        - authentication
  /auth/profile:
    get:
      responses:
        '200':
          description: Dictionary with all profile attributes
        '401':
          description: Missing or invalid credentials or token
      security:
        - Bearer: []
      summary: List profile attributes
      tags:
        - base
        - profiles
    post:
      parameters:
        - description: Email
          in: formData
          name: email
          required: true
          type: string
        - description: Password
          format: password
          in: formData
          name: password
          required: false
          type: string
        - description: Name
          in: formData
          name: name
          required: true
          type: string
        - description: Surname
          in: formData
          name: surname
          required: true
          type: string
        - in: formData
          name: roles
          required: false
          type: string
      responses:
        '200':
          description: ID of new user
      summary: Create new user
      tags:
        - base
        - profiles
    put:
      parameters:
        - in: body
          name: credentials
          schema:
            $ref: '#/definitions/ProfileUpdate'
      responses:
        '204':
          description: Updated has been successful
        '401':
          description: Missing or invalid credentials or token
      security:
        - Bearer: []
      summary: Update profile attributes
      tags:
        - base
        - profiles
#  /auth/tokens:
#    delete:
#      description: 'Note: allowed only for testing'
#      parameters:
#        - in: query
#          name: username
#          type: string
#        - description: uuid associated to the token you want to select
#          in: path
#          name: token_id
#          required: true
#          type: string
#      responses:
#        '200':
#          description: Tokens have been erased
#        '401':
#          description: Missing or invalid credentials or token
#      security:
#        - Bearer: []
#      summary: Remove all tokens emitted for logged user
#      tags:
#        - base
#        SSING_PATH_PARAMETER_DECLARATION- open_sessions
#    get:
#      parameters:
#        - in: query
#          name: username
#          type: string
#        - description: uuid associated to the token you want to select
#          in: path
#          name: token_id
#          required: true
#          type: string
#      responses:
#        '200':
#          description: List of tokens
#        '401':
#          description: Missing or invalid credentials or token
#      security:
#        - Bearer: []
#      summary: Show all tokens emitted for logged user
#      tags:
#        - base
#        - open_sessions
  '/auth/tokens/{token_id}':
    delete:
      parameters:
        - in: query
          name: username
          type: string
        - description: uuid associated to the token you want to select
          in: path
          name: token_id
          required: true
          type: string
      responses:
        '200':
          description: Token has been invalidated
        '401':
          description: Missing or invalid credentials or token
      security:
        - Bearer: []
      summary: Remove specified token and make it invalid from now on
      tags:
        - base
        - open_sessions
    get:
      parameters:
        - in: query
          name: username
          type: string
        - description: uuid associated to the token you want to select
          in: path
          name: token_id
          required: true
          type: string
      responses:
        '200':
          description: Details on the specified token
        '401':
          description: Missing or invalid credentials or token
      security:
        - Bearer: []
      summary: Show specified token if available for logged user
      tags:
        - base
        - open_sessions
produces:
  - application/json
schemes:
  - https
security:
  - Bearer: []
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: '2.0'
tags:
  - description: all endpoints associated to EUDAT services
    name: eudat
  - description: request/refresh authorization from B2ACCESS
    name: b2access
  - description: proxy access to irods b2safe credentials
    name: b2safe
  - description: 'upload, download, list and delete objects'
    name: registered
  - description: resolve and download data from EUDAT Persistent IDentifier
    name: pids
  - description: allow public access to data objects
    name: publish
  - description: landing page
    name: public
  - description: JSON with SWAGGER standards for any REST client
    name: specifications
  - description: endpoints for base operations
    name: base
  - description: tools for checking status and privileges
    name: helpers
  - description: log in and out of the REST API
    name: authentication
  - description: set and view profile for current credentials
    name: profiles
  - description: manage authorized sessions
    name: open_sessions
